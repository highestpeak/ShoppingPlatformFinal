<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mms.dao.GoodsOperateMapper">
    <resultMap id="tempGoodsWithClassifyVO" type="com.demo.mms.common.vo.StoreSelledClassifyVO">
    </resultMap>

    <select id="queryGoodsWithClassify" parameterType="String" resultMap="tempGoodsWithClassifyVO" >
        select DISTINCT
            classify_id,
            classify_name,
            parent_id
        from store_sell_classify NATURAL JOIN goods_classify
        where store_id = #{store_id}
    </select>

    <insert id="insertOnSale" parameterType="com.demo.mms.common.domain.OnSale">
        insert into on_sale (on_sale_id,store_id,goods_id,create_time,due_time,note,discount)
        values   (#{on_sale_id},#{store_id},#{goods_id}, #{create_time}, #{due_time},#{note},#{discount})
    </insert>

    <resultMap id="tempStoreGoodsChartByClassifyVO" type="com.demo.mms.common.vo.StoreGoodsChartByClassifyVO">
    </resultMap>
    <select id="queryStoreGoodsChartByClassify" parameterType="String" resultMap="tempStoreGoodsChartByClassifyVO">
        SELECT A.id as id,
              classify_name,
              goods_id
        FROM (SELECT goods_classify.classify_id,classify_name,store_sell_classify.id
              FROM store_sell_classify  LEFT JOIN goods_classify ON goods_classify.classify_id = store_sell_classify.classify_id
              WHERE store_id=#{store_id}) AS A LEFT JOIN classify_of_goods ON A.id=classify_of_goods.classify_selled_id
    </select>

    <resultMap id="queryAllGoodsOfStoreVO" type="com.demo.mms.common.domain.Goods">
    </resultMap>
    <select id="queryAllGoodsOfStore" parameterType="String" resultMap="queryAllGoodsOfStoreVO" >
        select *
        from goods
        where store_id = #{store_id}
    </select>

    <select id="queryStoreTopTenNewGoods" resultType="com.demo.mms.common.domain.Goods">
        SELECT *
        FROM goods
        WHERE store_id=#{store_id}
        ORDER BY create_time
        DESC LIMIT 0,10
    </select>

    <resultMap id="queryAllGoodsOfStoreWithClassifyVO" type="com.demo.mms.common.vo.GoodsWithClassifyVO">
    </resultMap>
    <select id="queryAllGoodsOfStoreWithClassifySend" parameterType="String" resultMap="queryAllGoodsOfStoreWithClassifyVO" >
        SELECT B.goods_id,B.store_id,goods_name,classify_name,price,description,pic_url,status,old_level,B.create_time,B.update_time
            FROM (SELECT id, classify_id,classify_name
                  FROM goods_classify NATURAL JOIN store_sell_classify) A
                  RIGHT JOIN
                (SELECT goods.goods_id,store_id,goods_name,price,description,pic_url,status,old_level,goods.create_time,goods.update_time,classify_selled_id
             FROM goods LEFT JOIN  classify_of_goods ON goods.goods_id = classify_of_goods.goods_id
             WHERE  store_id=#{store_id}) B ON A.id=B.classify_selled_id
    </select>
    <select id="queryAllGoodsOfStore_specialClass" parameterType="String" resultMap="queryAllGoodsOfStoreVO" >
        SELECT
          goods.goods_id,
          goods_name,
          goods.old_level,
          goods.pic_url,
          goods.status,
          goods.description,
          goods.store_id,
          goods.create_time,
          goods.update_time
        FROM goods,classify_of_goods, store_sell_classify,goods_classify
        where goods.store_id=#{store_id} AND goods_classify.classify_name=#{classify_name} AND
              goods.goods_id=classify_of_goods.goods_id AND
              classify_of_goods.classify_selled_id=store_sell_classify.id AND
              store_sell_classify.classify_id=goods_classify.classify_id
    </select>

    <resultMap id="tempOnSaleGoodsVO" type="com.demo.mms.common.vo.OnSaleGoodsVO">
        <association property="onSale" resultMap="com.demo.mms.common.domain.OnSale">
        </association>
    </resultMap>

    <select id="getStoreOnSale" resultMap="tempOnSaleGoodsVO">
        select
          on_sale_id,
          store_id,
          goods_id,
          create_time,
          due_time,
          note,
          discount,
          goods_name,
          price
        from on_sale NATURAL JOIN goods
        WHERE store_id=#{store_id};
    </select>

    <select id="getStarGoods" resultType="com.demo.mms.common.vo.StarGoodsGetVO">
        SELECT
          goodsStar_id,
          goods.store_id as store_id,
          goods.goods_id as goods_id,
          setStar_time
        FROM interested_goods,goods
        WHERE goods.goods_id=interested_goods.goods_id AND
              user_id=#{user_id};

    </select>
    <!--<resultMap id="returnGoodsOfStore" type="com.demo.mms.common.domain.Goods" ></resultMap>-->
    <!--<select id="queryGoodsOfStore" parameterType="String" resultMap="returnGoodsOfStore">-->
        <!--select *-->
        <!--FROM goods-->
        <!--WHERE store_id=#{store_id}-->
    <!--</select>-->
    
    
    <!--<resultMap id="Goods" type="com.demo.mms.common.domain.Goods">-->
    <!--</resultMap>-->
    <!--<select id="queryGoods" parameterType="String" resultMap="Goods" >-->
        <!--select-->
            <!--goods_id,-->
            <!--classify_id-->
        <!--from Goods where Goods.store_id = #{store_id}-->
    <!--</select>-->


    <!--<select id="queryClassifyOfStore" parameterType="String" resultMap="tempGoodsWithClassifyVO" >-->
        <!--select-->
        <!--goods_id,-->
        <!--classify_id-->
        <!--from store_sell_classify NATURAL JOIN goods_classify-->
        <!--where store_id = #{store_id}-->
    <!--</select>-->
</mapper>