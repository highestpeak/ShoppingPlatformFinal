<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mms.dao.UserOperateMapper">
  <insert id="insertUser" parameterType="com.demo.mms.common.domain.User">
    insert into user (user_id,verify,sex,realname,email,identity,create_time,update_time)
    values   (#{user_id}, #{verify}, #{sex}, #{realname},#{email},#{identity},#{create_time},#{update_time})
  </insert>

  <insert id="insertBuyer" parameterType="com.demo.mms.common.domain.Buyer">
    insert into buyer (user_id,bank_card,create_time,update_time)
    values   (#{user_id}, #{bank_card},#{create_time},#{update_time})
  </insert>

  <insert id="insertSeller" parameterType="com.demo.mms.common.domain.Seller">
    insert into seller (user_id,nickname,permission,bank_card,create_time,update_time)
    values   (#{user_id}, #{nickname}, #{permission}, #{bank_card},#{create_time},#{update_time})
  </insert>

  <insert id="insertAdmin" parameterType="com.demo.mms.common.domain.Admin">
    insert into admin (user_id,permission,permission,create_time,update_time)
    values   (#{user_id}, #{permission}, #{note},#{create_time},#{update_time})
  </insert>

  <resultMap id="tempQueryGoodsViewed" type="com.demo.mms.common.vo.GoodsViewedQueryVO">
  </resultMap>

  <select id="queryGoodsViewedByGoods" parameterType="String" resultMap="tempQueryGoodsViewed" >
        select
          view_id,
          view_time,
          goods_viewed.goods_id as goods_id,
          goods.goods_name as goods_name,
          goods_viewed.classify_id as classify_id,
          goods_classify.classify_name as classify_name
        FROM goods_viewed,goods,goods_classify
        where buyer_id = #{buyer_id} AND
          goods_viewed.goods_id=goods.goods_id AND
          goods_viewed.classify_id=goods_classify.classify_id;
  </select>

    <select id="queryGoodsViewedByClassify" parameterType="String" resultMap="tempQueryGoodsViewed" >
        select
            view_id,
            view_time,
            goods_viewed.goods_id as goods_id,
            goods.goods_name as goods_name,
            goods_viewed.classify_id as classify_id
        FROM goods_classify,(goods_viewed LEFT JOIN goods ON goods_viewed.goods_id = goods.goods_id)
        where buyer_id = #{buyer_id} AND
            goods_viewed.classify_id=goods_classify.classify_id AND
            goods_classify.classify_name=#{classify_name}
    </select>

    <resultMap id="tempQueryGoodsViewedTest" type="com.demo.mms.common.vo.GoodsViewedQueryTestVO">
        <association property="user" javaType="com.demo.mms.common.domain.User">
            <id property="user_id" column="user_id"/>
            <result property="realname" column="realname"/>
            <result property="nickname" column="nickname"/>
            <result property="avator_url" column="avator_url"/>
            <result property="sex" column="sex"/>
            <result property="email" column="email"/>
        </association>
        <association property="goodsViewed" javaType="com.demo.mms.common.domain.GoodsViewed">
            <id property="view_id" column="view_id"/>
            <result property="view_time" column="view_time"/>
        </association>
        <association property="goods" javaType="com.demo.mms.common.domain.Goods">
            <id property="goods_id" column="goods_id"/>
            <result property="goods_name" column="goods_name"/>
            <result property="pic_url" column="pic_url"/>
        </association>
        <association property="goodsClassify" javaType="com.demo.mms.common.domain.GoodsClassify">
            <id property="classify_id" column="classify_id"/>
            <result property="classify_name" column="classify_name"/>
        </association>
    </resultMap>
    <select id="queryGoodsViewedByStore" parameterType="String" resultMap="tempQueryGoodsViewedTest" >
        SELECT
          user.user_id as user_id,
          user.realname as realname,
          user.nickname as nickname,
          user.avator_url as avator_url,
          user.sex as sex,
          user.email as email,
          A.view_id as view_id,
          A.view_time as view_time,
          B.goods_name as goods_name,
          B.pic_url as pic_url,
          B.goods_id as goods_id,
          A.classify_id as classify_id,
          A.classify_name as classify_name
        FROM user,(goods_viewed LEFT JOIN goods_classify ON goods_viewed.classify_id = goods_classify.classify_id) as A,
          (goods LEFT JOIN store ON goods.store_id = store.store_id) as B
        WHERE user.user_id=A.buyer_id AND
            A.goods_id=B.goods_id
    </select>
</mapper>
